/*
Deployment script for Applebrie-db

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "Applebrie-db"
:setvar DefaultFilePrefix "Applebrie-db"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL15.MSSQLSERVER\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL15.MSSQLSERVER\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT LOCAL 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET PAGE_VERIFY NONE 
            WITH ROLLBACK IMMEDIATE;
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE (QUERY_CAPTURE_MODE = ALL, CLEANUP_POLICY = (STALE_QUERY_THRESHOLD_DAYS = 367), MAX_STORAGE_SIZE_MB = 100) 
            WITH ROLLBACK IMMEDIATE;
    END


GO
PRINT N'Rename refactoring operation with key d0d730e0-9f90-4b2e-a53a-0dad588cbb4f is skipped, element [users].[Users].[Roles] (SqlSimpleColumn) will not be renamed to Role';


GO
PRINT N'Creating Schema [users]...';


GO
CREATE SCHEMA [users]
    AUTHORIZATION [dbo];


GO
PRINT N'Creating Table [users].[Users]...';


GO
CREATE TABLE [users].[Users] (
    [Id]      INT        NOT NULL,
    [Name]    NCHAR (25) NOT NULL,
    [Sex]     BIT        NOT NULL,
    [Role]    TINYINT    NOT NULL,
    [Status]  TINYINT    NOT NULL,
    [Created] DATETIME   NOT NULL,
    [Updated] DATETIME   NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Procedure [users].[GetUsers]...';


GO
CREATE PROCEDURE [users].[GetUsers]
	@Search nvarchar(25),
	@OrderBy nvarchar(10),
	@Desc bit = 0,
	@Page int = 1,
	@PageSize int = 25
AS
	begin 
	    SELECT u.Id
            ,u.[Name]
            ,u.Sex
			,u.[Role]
			,u.[Status]
			,u.Created
			,u.Updated
        INTO #temp
            FROM
            [users].[Users] as u
        where (@Search IS NULL OR @Search = '' OR [Name] LIKE '%' + @Search + '%')

        declare @count int
        set @count = (select count(*) from #temp)

		SELECT
           @count as 'Count',
           JSON_QUERY( (SELECT * FROM #temp
                        ORDER BY
                                CASE WHEN @OrderBy = 'Id' AND @Desc = 0 THEN Id END,
                                CASE WHEN @OrderBy = 'Id' AND @Desc = 1 THEN Id END DESC,
                                CASE WHEN @OrderBy = 'Name' AND @Desc = 0 THEN [Name] END,
                                CASE WHEN @OrderBy = 'Name' AND @Desc = 1 THEN [Name] END DESC,
                                CASE WHEN @OrderBy = 'Sex' AND @Desc = 0 THEN Sex END,
                                CASE WHEN @OrderBy = 'Sex' AND @Desc = 1 THEN Sex END DESC,
                                CASE WHEN @OrderBy = 'Role' AND @Desc = 0 THEN [Role] END,
                                CASE WHEN @OrderBy = 'Role' AND @Desc = 1 THEN [Role] END DESC, 
                                CASE WHEN @OrderBy = 'Status' AND @Desc = 0 THEN [Status] END,
                                CASE WHEN @OrderBy = 'Status' AND @Desc = 1 THEN [Status] END DESC,
                                CASE WHEN @OrderBy = 'Created' AND @Desc = 0 THEN Created END,
                                CASE WHEN @OrderBy = 'Created' AND @Desc = 1 THEN Created END DESC,
                                CASE WHEN @OrderBy = 'Updated' AND @Desc = 0 THEN [Updated] END,
                                CASE WHEN @OrderBy = 'Updated' AND @Desc = 1 THEN [Updated] END DESC
                        OFFSET (@Page-1)*@PageSize ROWS
                        FETCH NEXT @PageSize ROWS ONLY
                        FOR JSON PATH
                    )) as 'Users'
            FOR JSON PATH , WITHOUT_ARRAY_WRAPPER
	end
GO
PRINT N'Creating Procedure [users].[UpsertUsers]...';


GO
CREATE PROCEDURE [users].[UpsertUsers]	
	@id     int = null,
	@name   nvarchar(25),
	@sex    bit,
	@role   tinyint,
	@status tinyint
as
begin
	if(ISNULL(@id, 0) = 0)

		begin
			insert into [users].[Users]([Name], [Sex], [Role], [Status], [Created], [Updated])
				values(@name, @sex, @role, @status, GETUTCDATE(), GETUTCDATE())
	
			SELECT TOP 1 * FROM [users].[Users] ORDER BY ID DESC
					FOR JSON PATH, WITHOUT_ARRAY_WRAPPER
		end
	else
		begin
			update u
				set [Name] = @name,
				[Sex] = @sex,
				[Role] = @role,
				[Status] = @status,
				[Updated] = GETUTCDATE()
					from [users].[Users] as u
				where [id] = @id

			SELECT * FROM [users].[Users] where [id] = @id
					FOR JSON PATH, WITHOUT_ARRAY_WRAPPER

		end
end;
GO
PRINT N'Creating Procedure [users].[CreateUser]...';


GO
CREATE PROCEDURE [users].[CreateUser]
	@name   nvarchar(25),
	@sex    bit,
	@role  tinyint,
	@status tinyint
as
	begin
		insert into [users].[Users]([Name], [Sex], [Role], [Status], [Created], [Updated])
			values(@name, @sex, @role, @status, GETUTCDATE(), GETUTCDATE())
	
		SELECT TOP 1 * FROM [users].[Users] ORDER BY ID DESC
				FOR JSON PATH, WITHOUT_ARRAY_WRAPPER
	end;
GO
-- Refactoring step to update target server with deployed transaction logs

IF OBJECT_ID(N'dbo.__RefactorLog') IS NULL
BEGIN
    CREATE TABLE [dbo].[__RefactorLog] (OperationKey UNIQUEIDENTIFIER NOT NULL PRIMARY KEY)
    EXEC sp_addextendedproperty N'microsoft_database_tools_support', N'refactoring log', N'schema', N'dbo', N'table', N'__RefactorLog'
END
GO
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'd0d730e0-9f90-4b2e-a53a-0dad588cbb4f')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('d0d730e0-9f90-4b2e-a53a-0dad588cbb4f')

GO

GO
PRINT N'Update complete.';


GO
